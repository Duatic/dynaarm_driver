<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /ros2_ws/src/dynaarm_demo/dynaarm_single_example/dynaarm_single_example_description/urdf/dynaarm_single_example.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
Copyright 2025 Duatic AG

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<robot name="dynaarm">
  <!--Example single arm setup-->
  <!-- -->
  <!-- DynaArm Macro-->
  <!-- -->
  <link name="world"/>
  <link name="table">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.025"/>
      <geometry>
        <box size="1.0 1.0 0.05"/>
      </geometry>
      <material name="Wood">
        <color rgba="0.9 0.83 0.733 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.0 1.0 0.05"/>
      </geometry>
    </collision>
  </link>
  <joint name="table_joint" type="fixed">
    <parent link="world"/>
    <child link="table"/>
  </joint>
  <joint name="joint_base" type="fixed">
    <parent link="table"/>
    <child link="base"/>
    <limit effort="2000" lower="0" upper="0" velocity="0"/>
    <origin rpy="0.0 0.0 0.0" xyz="0 0 0.085"/>
  </joint>
  <link name="base">
    <visual>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/base_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
      <material name="carbon_fiber">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/collision_meshes/base_collision_mesh.stl" scale="1 1 1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.00205474"/>
      <origin rpy="0 0 0" xyz="0.00347077 0.00328869 -0.0488212"/>
      <inertia ixx="0.00403342" ixy="0.00040828" ixz="-0.00018775" iyy="0.00417534" iyz="-0.0001821" izz="0.00460211"/>
    </inertial>
  </link>
  <link name="shoulder">
    <visual>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/shoulder_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="2.73096676"/>
      <origin rpy="0 0 0" xyz="0.00001348 0.00013521 0.0430259"/>
      <inertia ixx="0.01291668" ixy="0.0000044" ixz="-0.00000179" iyy="0.00874231" iyz="-0.00000203" izz="0.01243436"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/collision_meshes/shoulder_collision_mesh.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <joint name="shoulder_rotation" type="revolute">
    <parent link="base"/>
    <child link="shoulder"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-4.312388980385" upper="4.312388980385" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="0 0 0" xyz="0 0 0.0105"/>
  </joint>
  <link name="upperarm">
    <visual>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/upperarm_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <!-- Original - <mass value="1.72040464" /> -->
      <mass value="2.12040464"/>
      <origin rpy="0 0 0" xyz="0.20391301 -0.00000528 -0.00015224"/>
      <inertia ixx="0.00155499" ixy="0.00000098" ixz="0.00004108" iyy="0.05067934" iyz="-0.00000143" izz="0.0507131"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/collision_meshes/upperarm_collision_mesh.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <joint name="shoulder_flexion" type="revolute">
    <parent link="shoulder"/>
    <child link="upperarm"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-1.720796326795" upper="1.720796326795" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="1.570796326795 -1.570796326795 0" xyz="0 0 0.047"/>
  </joint>
  <link name="elbow">
    <visual>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/elbow_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.82320237"/>
      <origin rpy="0 0 0" xyz="0.00383866 -0.07802638 -0.00026928"/>
      <inertia ixx="0.00107419" ixy="0.00004166" ixz="-0.00000398" iyy="0.00087121" iyz="-0.0000119" izz="0.00113856"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/collision_meshes/elbow_collision_mesh.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <joint name="elbow_flexion" type="revolute">
    <parent link="upperarm"/>
    <child link="elbow"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="0.2" upper="3.0915926535900002" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="0 0 0" xyz="0.4127 0 0"/>
  </joint>
  <link name="elbow_camera_mount">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <mass value="0.001"/>
      <inertia ixx="1e-07" ixy="0.0" ixz="0.0" iyy="1e-07" iyz="0.0" izz="1e-07"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="elbow_camera_mount">
    <kp>10000.0</kp>
    <kd>10.0</kd>
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
  </gazebo>
  <joint name="elbow_camera" type="fixed">
    <parent link="elbow"/>
    <child link="elbow_camera_mount"/>
    <limit effort="2000" lower="0" upper="0" velocity="0"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0345 -0.1235 0"/>
  </joint>
  <link name="forearm">
    <visual>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/forearm_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.15674546"/>
      <origin rpy="0 0 0" xyz="-0.00115165 0.00001056 0.30067314"/>
      <inertia ixx="0.03129519" ixy="0.00000151" ixz="-0.00017171" iyy="0.03125954" iyz="0.00000159" izz="0.00090392"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/collision_meshes/forearm_collision_mesh.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <joint name="forearm_rotation" type="revolute">
    <parent link="elbow"/>
    <child link="forearm"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-4.7123889803850005" upper="4.7123889803850005" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="1.570796326795 1.570796326795 1.570796326795" xyz="0.0262 -0.0855 0"/>
  </joint>
  <link name="wrist_1">
    <visual>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/wrist1_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <!-- <mass value="0.75007482" />  original value but doesn't work well - Needs to include the cables inside the forearm tube?-->
      <mass value="1.15007482"/>
      <origin rpy="0 0 0" xyz="0.07972553 -0.00005038 0.02334747"/>
      <inertia ixx="0.00065953" ixy="0.00000076" ixz="0.00011795" iyy="0.00088282" iyz="-0.00000079" izz="0.00078106"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/collision_meshes/wrist1_collision_mesh.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <joint name="wrist_flexion" type="revolute">
    <parent link="forearm"/>
    <child link="wrist_1"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-1.820796326795" upper="1.820796326795" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="0 -1.570796326795 0" xyz="0.0295 0 0.4207"/>
  </joint>
  <link name="wrist_1_camera_mount">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <mass value="0.001"/>
      <inertia ixx="1e-07" ixy="0.0" ixz="0.0" iyy="1e-07" iyz="0.0" izz="1e-07"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="wrist_1_camera_mount">
    <kp>10000.0</kp>
    <kd>10.0</kd>
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
  </gazebo>
  <joint name="wrist_flexion_camera" type="fixed">
    <parent link="wrist_1"/>
    <child link="wrist_1_camera_mount"/>
    <limit effort="2000" lower="0" upper="0" velocity="0"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.032 0 -0.017"/>
  </joint>
  <link name="wrist_2">
    <visual>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/wrist2_mesh.dae" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.0478406"/>
      <origin rpy="0 0 0" xyz="0.00045711 0.00000557 0.00344945"/>
      <inertia ixx="0.00001366" ixy="0" ixz="0.00000008" iyy="0.00001419" iyz="0" izz="0.00002702"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///ros2_ws/install/dynaarm_description/share/dynaarm_description/meshes/baracuda12/collision_meshes/wrist2_collision_mesh.stl" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <joint name="wrist_rotation" type="revolute">
    <parent link="wrist_1"/>
    <child link="wrist_2"/>
    <axis xyz="0 0 1"/>
    <limit command_effort="40" current="10" effort="40" gear_velocity="4" lower="-4.7123889803850005" upper="4.7123889803850005" velocity="4"/>
    <!-- limit effort also defines torque limit and freeze controller gains -->
    <origin rpy="-1.570796326795 1.570796326795 -1.570796326795" xyz="0.117 0.0 0.0295"/>
  </joint>
  <link name="flange">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <mass value="0.001"/>
      <inertia ixx="1e-07" ixy="0.0" ixz="0.0" iyy="1e-07" iyz="0.0" izz="1e-07"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="flange">
    <kp>10000.0</kp>
    <kd>10.0</kd>
    <mu1>0.8</mu1>
    <mu2>0.8</mu2>
  </gazebo>
  <joint name="flange_fix_joint" type="fixed">
    <parent link="wrist_2"/>
    <child link="flange"/>
    <limit effort="2000" lower="0" upper="0" velocity="0"/>
    <origin rpy="0.0 0.0 1.570796326795" xyz="0.0 0.0 0.009"/>
  </joint>
  <ros2_control name="DynaarmSystem" type="system">
    <hardware>
      <plugin>dynaarm_driver/DynaarmMockHardwareInterface</plugin>
      <param name="tf_prefix"></param>
      <param name="start_in_freeze_mode">False</param>
      <param name="drive_parameter_folder">/ros2_ws/install/dynaarm_driver/share/dynaarm_driver/config/baracuda12</param>
      <param name="drive_parameter_folder_default">/ros2_ws/install/dynaarm_driver/share/dynaarm_driver/config/baracuda12</param>
    </hardware>
    <joint name="shoulder_rotation">
      <param name="address">1</param>
      <state_interface name="position">
        <!-- Slightly offset the initial position for the gazebo sim-->
        <param name="initial_value">0.05</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
    </joint>
    <joint name="shoulder_flexion">
      <param name="address">2</param>
      <state_interface name="position">
        <!-- Slightly offset the initial position for the gazebo sim-->
        <param name="initial_value">0.05</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
    </joint>
    <joint name="elbow_flexion">
      <param name="address">3</param>
      <state_interface name="position">
        <!-- Slightly offset the initial position for the gazebo sim-->
        <param name="initial_value">0.05</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
    </joint>
    <joint name="forearm_rotation">
      <param name="address">4</param>
      <state_interface name="position">
        <!-- Slightly offset the initial position for the gazebo sim-->
        <param name="initial_value">0.05</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
    </joint>
    <joint name="wrist_flexion">
      <param name="address">5</param>
      <state_interface name="position">
        <!-- Slightly offset the initial position for the gazebo sim-->
        <param name="initial_value">0.05</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
    </joint>
    <joint name="wrist_rotation">
      <param name="address">6</param>
      <state_interface name="position">
        <!-- Slightly offset the initial position for the gazebo sim-->
        <param name="initial_value">0.05</param>
      </state_interface>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
      <state_interface name="motor_position"/>
      <state_interface name="motor_velocity"/>
      <state_interface name="motor_effort"/>
      <state_interface name="motor_temperature_system"/>
      <state_interface name="motor_temperature_coil_A"/>
      <state_interface name="motor_temperature_coil_B"/>
      <state_interface name="motor_temperature_coil_C"/>
      <state_interface name="motor_bus_voltage"/>
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <command_interface name="effort"/>
      <command_interface name="p_gain"/>
      <command_interface name="i_gain"/>
      <command_interface name="d_gain"/>
    </joint>
    <gpio name="DynaarmSystem">
      <command_interface name="freeze_mode"/>
    </gpio>
  </ros2_control>
</robot>
